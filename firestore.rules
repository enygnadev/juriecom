rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Permitir leitura dos produtos para todos
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && 
        resource.data.get('userId', '') == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true;
    }

    // Regras para usuários
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true);
    }

    // Regras para pedidos
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true);
      allow create: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true;
    }

    // Regras para endereços - apenas o próprio usuário pode acessar
    match /addresses/{addressId} {
      allow read, write, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Regras para métodos de pagamento - apenas o próprio usuário pode acessar
    match /paymentMethods/{paymentMethodId} {
      allow read, write, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Regras para lista de desejos - apenas o próprio usuário pode acessar
    match /wishlist/{wishlistId} {
      allow read, write, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Regras para configurações - apenas admins
    match /settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true;
    }

    // Regras para carrinho de compras
    match /carts/{cartId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == cartId || 
         resource.data.get('userId', '') == request.auth.uid);
    }

    // Regras para sessões e logs de segurança
    match /userSessions/{sessionId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Permitir leitura de dados públicos
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true;
    }

    // Regras para analytics e métricas (apenas admins)
    match /analytics/{document=**} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true;
    }

    // Negar acesso a qualquer outro documento por padrão
    match /{document=**} {
      allow read, write: if false;
    }
  }
}